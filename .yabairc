#!/usr/bin/env sh

# the scripting-addition must be loaded manually if
# you are running yabai on macOS Big Sur. Uncomment
# the following line to have the injection performed
# when the config is executed during startup.
#
# for this to work you must configure sudo such that
# it will be able to run the command without password
#
# see this wiki page for information:
#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
#
 sudo yabai --load-sa
# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# general space settings
yabai -m config layout                       bsp

yabai -m space 1 --label web
yabai -m space 2 --label code
yabai -m space 3 --label music
yabai -m space 4 --label games
yabai -m space 5 --label misc
yabai -m space 6 --label dota
yabai -m space 7 --label extra

#yabai -m signal --add event=space_changed \
 #   action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"spaces-widget\"'"

#yabai -m signal --add event=space_changed action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"simple-bar-spaces-jsx\"'"

#yabai -m config --space games layout        float

yabai -m rule --add app="^Firefox$" space=web
yabai -m rule --add app="^Atom$" space=code
yabai -m rule --add app="^Code$" space=code
yabai -m rule --add app="^Music$" space=music
yabai -m rule --add app="^Steam$" space=games manage=off
yabai -m rule --add app="^Messages$" space=misc manage=off
yabai -m rule --add app="^System Preferences$" manage=off
yabai -m rule --add app="^Dota 2$" sticky=on layer=above manage=off

yabai -m config top_padding                  20
yabai -m config bottom_padding               20
yabai -m config left_padding                 20
yabai -m config right_padding                20
yabai -m config window_gap                   20

# New window spawns to the left if vertical split, or top if horizontal split
yabai -m config window_placement first_child

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

yabai -m config auto_balance off
yabai -m config split_ratio 0.5
# set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier cmd

# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize

# set focus follows mouse mode (default: off, options: off, autoraise, autofocus)
yabai -m config focus_follows_mouse autofocus

# add 20 padding to the top and 0 padding to the bottom of every space located on the main display
yabai -m config external_bar main:30:0
# add 20 padding to the top and bottom of all spaces regardless of the display it belongs to
#yabai -m config external_bar all:20:20
# floating windows are always on top (default: off)
yabai -m config window_topmost on

# modify window shadows (default: on, options: on, off, float)
# example: show shadows only for floating windows
yabai -m config window_shadow on

# window opacity (default: off)
# example: render all unfocused windows with 90% opacity
yabai -m config window_opacity on
yabai -m config active_window_opacity 1.0
yabai -m config normal_window_opacity 0.97
#

# signals
#yabai -m signal --add event=window_destroyed active=yes action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse &> /dev/null || yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id) &> /dev/null"
# yabai -m signal --add event=window_destroyed action="echo \"destroyed window with id \$YABAI_WINDOW_ID\""
# yabai -m signal --add event=space_changed action="echo \"changed space \$YABAI_RECENT_SPACE_ID -> \$YABAI_SPACE_ID\""
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

#DEBUG
# directory containing log files (HOMEBREW_PREFIX defaults to /usr/local unless you manually specified otherwise)
HOMEBREW_PREFIX/var/log/yabai/

# view the last lines of the error log
tail -f /usr/local/var/log/yabai/yabai.err.log

# view the last lines of the debug log
tail -f /usr/local/var/log/yabai/yabai.out.log

echo "yabai configuration loaded.."
